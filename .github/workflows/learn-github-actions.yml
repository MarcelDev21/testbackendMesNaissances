name: "deploy microservice"
run-name: ${{ github.actor }} is learning GitHub Actions
on:
  push:
  workflow_dispatch:

jobs:
  create-folder:
    name: Create folder on Server
    runs-on: ubuntu-latest
    steps:
      - name: Creer un repertoire sur le server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY}}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            mkdir -p /opt/mes-naissances/ms-naissances

  generate-project-and-copy-to-server:
    name: generate project and copy to server
    runs-on: ubuntu-latest
    needs:
      - create-folder
    steps:
      - name: checkout the repository code
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'
      - name: generate project
        run: |
          ./mvnw clean package spring-boot:repackage -Dmaven.test.skip=true
           ls -al target
      - name: rename project
        run: |
          mv target/ms-naissances*.jar target/ms-naissances.jar

      - name: Copy project in my server
        uses: appleboy/scp-action@v1
        with:
         host: ${{ secrets.SERVER_HOST }}
         username: ${{ secrets.SERVER_USERNAME }}
         key: ${{ secrets.SERVER_SSH_PRIVATE_KEY}}
         port: ${{ secrets.SERVER_PORT }}
         source: target/ms-naissances.jar
         target: /opt/mes-naissances/ms-naissances

  run-project:
    name: run project
    runs-on: ubuntu-latest
    needs:
      - generate-project-and-copy-to-server
    steps:
      - name: Executer le projet
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY}}
          port: ${{ secrets.SERVER_PORT }}
          envs: APPLICATION_DATABASE,APPLICATION_USERNAME,APPLICATION_PASSWORD,APPLICATION_MAIL_SERVER
          script: |
            # Création du fichier systemd
            sudo tee /etc/systemd/system/ms-naissances.service > /dev/null << 'EOF'
            [Unit]
            Description=MS Naissances Spring Boot Service
            After=network.target

            [Service]
            User=root
            WorkingDirectory=/opt/mes-naissances/ms-naissances
            ExecStart=/usr/bin/java -jar /opt/mes-naissances/ms-naissances/target/ms-naissances.jar \
            --spring.datasource.url=${{ secrets.APPLICATION_DATABASE }} \
            --spring.datasource.username=${{ secrets.APPLICATION_USERNAME }} \
            --spring.datasource.password=${{ secrets.APPLICATION_PASSWORD }} \
            --application.mails.server=${{ secrets.APPLICATION_MAIL_SERVER }}
            SuccessExitStatus=143
            StandardOutput=file:/opt/mes-naissances/ms-naissances/ms-naissances.log
            StandardError=file:/opt/mes-naissances/ms-naissances/ms-naissances.log
            Restart=always
            RestartSec=10

            [Install]
            WantedBy=multi-user.target
            EOF

            # Activer et démarrer le service
            sudo systemctl daemon-reload
            sudo systemctl enable ms-naissances
            sudo systemctl restart ms-naissances